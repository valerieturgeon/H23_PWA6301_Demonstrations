// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiBooks_DataAccess.Data;

namespace MultiBooks_DataAccess.Migrations
{
    [DbContext(typeof(MultiBooksDbContext))]
    partial class MultiBooksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MultiBooks_Models.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorDetail_Id")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorDetail_Id")
                        .IsUnique()
                        .HasFilter("[AuthorDetail_Id] IS NOT NULL");

                    b.HasIndex("MentorId");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorDetail_Id = 1,
                            FirstName = "Elie",
                            LastName = "Hanson"
                        },
                        new
                        {
                            Id = 2,
                            AuthorDetail_Id = 2,
                            FirstName = "Vincent",
                            LastName = "Fournier-Boisvert",
                            MentorId = 1
                        },
                        new
                        {
                            Id = 3,
                            AuthorDetail_Id = 3,
                            FirstName = "Guy",
                            LastName = "Bergeron"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Kim",
                            LastName = "Messier",
                            MentorId = 7
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Bernard",
                            LastName = "Turgeon"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Dominic",
                            LastName = "Lamaute",
                            MentorId = 5
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Agatha",
                            LastName = "Christie"
                        });
                });

            modelBuilder.Entity("MultiBooks_Models.Models.AuthorBook", b =>
                {
                    b.Property<int>("Author_Id")
                        .HasColumnType("int");

                    b.Property<int>("Book_Id")
                        .HasColumnType("int");

                    b.HasKey("Author_Id", "Book_Id");

                    b.HasIndex("Book_Id");

                    b.ToTable("AuthorBook");

                    b.HasData(
                        new
                        {
                            Author_Id = 1,
                            Book_Id = 1
                        },
                        new
                        {
                            Author_Id = 2,
                            Book_Id = 2
                        },
                        new
                        {
                            Author_Id = 3,
                            Book_Id = 3
                        },
                        new
                        {
                            Author_Id = 4,
                            Book_Id = 4
                        },
                        new
                        {
                            Author_Id = 5,
                            Book_Id = 5
                        },
                        new
                        {
                            Author_Id = 5,
                            Book_Id = 6
                        },
                        new
                        {
                            Author_Id = 6,
                            Book_Id = 5
                        },
                        new
                        {
                            Author_Id = 6,
                            Book_Id = 6
                        },
                        new
                        {
                            Author_Id = 7,
                            Book_Id = 7
                        },
                        new
                        {
                            Author_Id = 7,
                            Book_Id = 8
                        },
                        new
                        {
                            Author_Id = 7,
                            Book_Id = 9
                        });
                });

            modelBuilder.Entity("MultiBooks_Models.Models.AuthorDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Photo")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("AuthorDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "Né au Caire, diplômé en traduction et en littérature française, Elie Hanson est un globe-trotter qui a vécu sur quatre continents, avant de finalement s’installer à Montréal. Il a reçu la Médaille du jubilé de diamant de la reine Elizabeth II avec la première édition de son roman Le carnet maudit. Mission Arctik est son cinquième roman.",
                            Photo = ""
                        },
                        new
                        {
                            Id = 2,
                            Biography = "Originaire de St-Hyacinthe, Vincent Fournier-Boisvert est musicien et enseignant. Il a joué pour Cavalia et dans des groupes de trad, de free jazz et de black métal. Le puits est son premier roman.",
                            Photo = ""
                        },
                        new
                        {
                            Id = 3,
                            Biography = "Conseiller informatique résidant à Québec, Guy Bergeron a connu un succès considérable avec La trilogie de l’Orbe et sa fresque L’Héritière de Ferrolia. Après Coeur de Givre et Les âmes perdues, deux récits de la série Légendes d’Arménis, il a adapté à sa manière les grands classiques homériques avec Fils de Troie et Le retour d’Ulysse. Avec Évelyne est morte, il change de registre littéraire et signe un polar fantastique impeccable confirmant l’étendue de son talent.",
                            Photo = ""
                        });
                });

            modelBuilder.Entity("MultiBooks_Models.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Publisher_Id")
                        .HasColumnType("int");

                    b.Property<int>("Subject_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("Id");

                    b.HasIndex("Publisher_Id");

                    b.HasIndex("Subject_Id");

                    b.HasIndex("Title")
                        .HasDatabaseName("Index_BookTitle");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            ISBN = "9782898190063",
                            Price = 19.95m,
                            PublishedDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher_Id = 1,
                            Subject_Id = 8,
                            Title = "Mission Arctik"
                        },
                        new
                        {
                            Id = 2,
                            Available = true,
                            ISBN = "9782898190001",
                            Price = 19.95m,
                            PublishedDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher_Id = 1,
                            Subject_Id = 1,
                            Title = "Le puit"
                        },
                        new
                        {
                            Id = 3,
                            Available = true,
                            ISBN = "9782898032752",
                            Price = 19.95m,
                            PublishedDate = new DateTime(2019, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher_Id = 1,
                            Subject_Id = 8,
                            Title = "Menvatts-valse macabre"
                        },
                        new
                        {
                            Id = 4,
                            Available = true,
                            ISBN = "9782898032813",
                            Price = 19.95m,
                            PublishedDate = new DateTime(2021, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher_Id = 1,
                            Subject_Id = 8,
                            Title = "Menvatts-Uncia"
                        },
                        new
                        {
                            Id = 5,
                            Available = true,
                            ISBN = "9782765045281",
                            Price = 61.95m,
                            PublishedDate = new DateTime(2017, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher_Id = 2,
                            Subject_Id = 4,
                            Title = "De la supervision à la gestion des ressources humaines"
                        },
                        new
                        {
                            Id = 6,
                            Available = true,
                            ISBN = "9782765051527",
                            Price = 59.95m,
                            PublishedDate = new DateTime(2016, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher_Id = 2,
                            Subject_Id = 4,
                            Title = "Le management - À l ère des technologies de l information"
                        },
                        new
                        {
                            Id = 7,
                            Available = true,
                            ISBN = "9782253167129",
                            Price = 22m,
                            PublishedDate = new DateTime(1920, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher_Id = 3,
                            Subject_Id = 1,
                            Title = "Affaires de styles"
                        },
                        new
                        {
                            Id = 8,
                            Available = true,
                            ISBN = "9782253167130",
                            Price = 24m,
                            PublishedDate = new DateTime(1937, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher_Id = 3,
                            Subject_Id = 1,
                            Title = "Témoins muets"
                        },
                        new
                        {
                            Id = 9,
                            Available = true,
                            ISBN = "9782253177753",
                            Price = 18.55m,
                            PublishedDate = new DateTime(1938, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Publisher_Id = 3,
                            Subject_Id = 1,
                            Title = "Le Noël d Hercule Poirot"
                        });
                });

            modelBuilder.Entity("MultiBooks_Models.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publisher");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ADA",
                            PublisherSite = "www.ada-inc.com",
                            Speciality = "Jeunesse, croissance personnelle"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chenelière",
                            PublisherSite = "www.cheneliere.ca",
                            Speciality = "Éducation, collégial, universitaire"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Livre de poche",
                            PublisherSite = "www.livredepoche.com",
                            Speciality = "Drame, policier, biographie"
                        });
                });

            modelBuilder.Entity("MultiBooks_Models.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Policier"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Drame"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mystère"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ressources humaines"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Fantastique"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Droits"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Biographie"
                        });
                });

            modelBuilder.Entity("MultiBooks_Models.Models.Author", b =>
                {
                    b.HasOne("MultiBooks_Models.Models.AuthorDetail", "AuthorDetail")
                        .WithOne("Author")
                        .HasForeignKey("MultiBooks_Models.Models.Author", "AuthorDetail_Id");

                    b.HasOne("MultiBooks_Models.Models.Author", "Mentor")
                        .WithMany()
                        .HasForeignKey("MentorId");

                    b.Navigation("AuthorDetail");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("MultiBooks_Models.Models.AuthorBook", b =>
                {
                    b.HasOne("MultiBooks_Models.Models.Author", "Author")
                        .WithMany("AuthorsBooks")
                        .HasForeignKey("Author_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiBooks_Models.Models.Book", "Book")
                        .WithMany("AuthorsBooks")
                        .HasForeignKey("Book_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("MultiBooks_Models.Models.Book", b =>
                {
                    b.HasOne("MultiBooks_Models.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("Publisher_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiBooks_Models.Models.Subject", "Subject")
                        .WithMany("Books")
                        .HasForeignKey("Subject_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("MultiBooks_Models.Models.Author", b =>
                {
                    b.Navigation("AuthorsBooks");
                });

            modelBuilder.Entity("MultiBooks_Models.Models.AuthorDetail", b =>
                {
                    b.Navigation("Author");
                });

            modelBuilder.Entity("MultiBooks_Models.Models.Book", b =>
                {
                    b.Navigation("AuthorsBooks");
                });

            modelBuilder.Entity("MultiBooks_Models.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("MultiBooks_Models.Models.Subject", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
